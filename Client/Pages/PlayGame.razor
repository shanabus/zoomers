@page "/game/{id}"
@inject HttpClient Http
@using ZoomersClient.Shared.Models
@using ZoomersClient.Client.Components
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager

@if (Game != null) {
    <div class="row">
        <div class="col-9">
            <h1>@Game.Name</h1>
        </div>
        @foreach(var icon in Game.Party)
        {
            <div class="col-1">
                <PartyButton Icon="icon" />
            </div>
        }
    </div>

    <div class="row">
        @foreach(var player in Players)
        {
            <div class="col-4">
                @player.Username
            </div>
        }
    </div>
} else {
    <h1>Load game...</h1>
}

@code {
    [Parameter]
    public string Id { get; set; }

    public Game Game { get; set; }

    public List<Player> Players { get; set;}

    private HubConnection hubConnection;

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        Players = new List<Player>();

        Game = await Http.GetFromJsonAsync<Game>($"Games/{Id}");

        // connect to hub
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/gamehub"))
            .Build();

             // subscribe to other things
        hubConnection.On<Game>("PlayersUpdated", (game) => {
            Console.WriteLine("A player has joined!");
            Players = game.Players;
            StateHasChanged();
        });

        // start hub
        await hubConnection.StartAsync();

        await hubConnection.SendAsync("Subscribe", Id);
    }

    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        await hubConnection.DisposeAsync();
    }
}
