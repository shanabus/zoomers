@inject ZoomersClient.Shared.Services.BlazorTimer BlazorTimer

<div id="game-clock" class="@Class">
    <div id="remaining-time">@counter</div>
    <div id="unit-of-measure">sec</div>
</div>


@code {
    [Parameter]
    public string Class { get; set; }
    [Parameter]
    public int Seconds { get; set; }
    [Parameter]
    public EventCallback<int> TimeEllapsed { get; set; }
    
    // private static System.Timers.Timer aTimer;

    private int counter = 0;
    
    protected override void OnInitialized()
    {        
        counter = Seconds;
        base.OnInitialized();
    }

    public void StartTimer(int seconds)
    {
        counter = seconds;

        //if(!aTimer.Enabled)
        //{            
        //    aTimer.Elapsed += CountDownTimer;
        //    aTimer.Enabled = true;
        //}        
        BlazorTimer.SetTimer(seconds);
        BlazorTimer.OnElapsed += CountDownTimer;
        Console.WriteLine("Timer started");
    }

    public void ResetTimer()
    {
        BlazorTimer.DisposeTimer();
        Console.WriteLine("Do we need to dispose timer?");
    }

    public void CountDownTimer()
    {
        if (counter > 0)
        {
            counter -= 1;
        }
        else
        {
            ResetTimer();
            TimeEllapsed.InvokeAsync(counter);
        }
        StateHasChanged();
    }
    
    public void Dispose()
    {
        // aTimer.Dispose();
    }  
}
