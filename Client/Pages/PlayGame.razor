@page "/game/{id}"
@layout GameLayout
@inject HttpClient Http
@using ZoomersClient.Shared.Models
@using ZoomersClient.Client.Components
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager
@inject ZoomersClient.Shared.Services.GameService GameService

@if (Game != null)
{
    <div class="row">
        <div class="col-sm-5">
            <h1>@Game.Name</h1>
        </div>
        <div class="col-sm-7 text-right" id="game-party-icons">
            @foreach (var icon in Game.Party)
            {
                <PartyButton Icon="icon" />
            }
        </div>
    </div>
    <h2>Players in Lobby @Players.Count()</h2>
    <div class="row">
        @foreach (var player in Players)
        {
            <div class="col-3 player-badge mt-4">
                <span>@player</span>
            </div>
            <div class="col-1"></div>
        }
    </div>
    @if(Players.Count() >= 3)
    {
        <div class="row mt-4">
            <div class="col">
                <h3>Hey <u>@Players.First()</u>, press 'Start' when everybody is in</h3>
            </div>
        </div>
    }
}
else
{
    <h1>Load game...</h1>
}

@code {
    [Parameter]
    public string Id { get; set; }

    public Game Game { get; set; }

    public IEnumerable<string> Players { get; set; }

    private HubConnection hubConnection;

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        Game = await Http.GetFromJsonAsync<Game>($"Games/{Id}");

        Players = await Http.GetFromJsonAsync<IEnumerable<string>>($"Games/{Id}/players");

        foreach (var player in Game.Players)
        {
            Console.WriteLine($"{player.Username} is here");
        }

        // connect to hub
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/gamehub"))
            .Build();

        // subscribe to other things
        hubConnection.On<Guid>("PlayersUpdated", async (id) =>
        {
            // why can't we get the Game object here?
            // await UpdateGame(id);
            // Game = game;
            Players = await Http.GetFromJsonAsync<IEnumerable<string>>($"Games/{Id}/players");
            StateHasChanged();
        });

        // start hub
        await hubConnection.StartAsync();

        await hubConnection.SendAsync("Subscribe", Id);
    }

    private async Task UpdateGame(Guid id)
    {
        // Game = await Http.GetFromJsonAsync<Game>($"Games/{id}");
        var result = await Http.GetAsync($"Games/{id}");
        var content = await result.Content.ReadAsStringAsync();
        // Game = System.Text.Json.Serialization.JsonSerializer.Parse<Game>(content);

        foreach (var p in Game.Players)
        {
            Console.WriteLine($"Uh.. {p.Username}");
        }
        StateHasChanged();
    }

    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        await hubConnection.DisposeAsync();
    }
}
