<div id="game-clock" class="@Class">
    <div id="remaining-time">@CurrentSeconds</div>
    <div id="unit-of-measure">sec</div>
</div>

@code {
    [Parameter]
    public int Seconds { get; set; }
    [Parameter]
    public string Class { get; set; }
    [Parameter]
    public bool ClockRunning { get; set; }

    [Parameter]
    public EventCallback TimeEllapsed { get; set; }

    public int CurrentSeconds { get; set; }
    public TimeSpan ClockValue { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        CurrentSeconds = Seconds;

        ClockValue = new TimeSpan(0, 0, Seconds);
    }

    protected override async Task OnParametersSetAsync()
    {
        if (ClockRunning) {
            await ClockTick();
        }
    }

    async Task ClockTick()
    {
        while (ClockRunning)
        {
            await Task.Delay(1000);
            if (ClockRunning)
            {
                ClockValue = ClockValue.Add(new TimeSpan(0,0,-1));
                CurrentSeconds = ClockValue.Seconds;
                StateHasChanged();

                if (CurrentSeconds <= 0)
                {
                    await TimeEllapsed.InvokeAsync();
                    ClockRunning = false;
                }
            }
        }
    }
}

    