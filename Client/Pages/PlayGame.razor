@page "/game/{id}"
@layout GameLayout
@inject HttpClient Http
@using ZoomersClient.Shared.Models
@using ZoomersClient.Client.Components
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager
@inject ZoomersClient.Shared.Services.GameService GameService

@if (Game != null)
{
    <div class="row">
        <div class="col-sm-6">
            <h1>Game Name: <u>@Game.Name</u></h1>

            <h2>Players in Lobby @Game.Players.Count()</h2>
            <div class="row" id="player-lobby">
                @foreach (var player in Game.Players)
                {
                    <div class="col-4 player-badge mt-4">
                        <div style="background-color: @player.BackgroundColor">
                            <PlayerIconButton Icon="@player.Icon"></PlayerIconButton>
                        </div>
                        <span>@player.Username</span>                        
                    </div>
                }
            </div>
        </div>
        <div class="col-sm-6 text-right" id="game-party-icons">
            <div id="party-connect">
            @foreach (var icon in Game.Party)
            {
                <PartyButton Icon="icon" />
            }
                <br />
                <div class="ml-4">
                    <img src="@(NavigationManager.BaseUri)Games/@Id/qrcode" />
                </div>
            </div>
        </div>
    </div>
    
    @if(Game.Players.Count() >= 3)
    {
        <div class="row mt-4">
            <div class="col mt-4">
                <h3>Hey <u>@Game.Players.First().Username</u>, press 'Start' when everybody is in</h3>
            </div>
        </div>
    }
}
else
{
    <div id="app-splash">
        <div class="container">
            <div class="row h-100 align-items-center">
                <div class="col text-center">
                    <div class="lds-ellipsis mt-4"><div></div><div></div><div></div><div></div></div>
                    <br />
                    Loading Game...
                </div>
            </div>                
        </div>
    </div>
}

@code {
    [Parameter]
    public string Id { get; set; }

    public Game Game { get; set; }

    private HubConnection hubConnection;

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        Game = await Http.GetFromJsonAsync<Game>($"Games/{Id}");
        
        // connect to hub
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/gamehub"))
            .Build();

        // subscribe to other things
        hubConnection.On<Game>("PlayersUpdated", (game) =>
        {            
            Game = game;
            StateHasChanged();
        });

        hubConnection.On<Game>("PlayersUpdated", (game) =>
        {            
            Game = game;
            StateHasChanged();
        });

        // start hub
        await hubConnection.StartAsync();

        await hubConnection.SendAsync("Subscribe", Id);
    }

    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        await hubConnection.DisposeAsync();
    }
}
